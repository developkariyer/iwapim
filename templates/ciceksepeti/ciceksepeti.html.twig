{% extends 'base.html.twig' %}
{% block title %} Sticker {% endblock %}
{% block navbaritems %}

{% endblock %}
{% block header %}

{% endblock %}
{% block content %}
    <div class="container mt-4">
        <h1 class="text-center mb-4">Çiçeksepeti Ürünleri</h1>

        <!-- Ana ürün grupları -->
        <div class="row g-4 product-groups" id="product-container">
            {% if groupedListings|length > 0 %}
                {% for mainCode, products in groupedListings %}
                    {% set firstProduct = products|first %}
                    <div class="col-12 col-sm-6 col-md-4 col-lg-3 mb-4 product-wrapper" data-main-code="{{ mainCode }}">
                        <div class="product-group-card">
                            <div class="card h-100 shadow-sm">
                                <div class="card-img-container">
                                    {% if firstProduct.images is defined and firstProduct.images|length > 0 %}
                                        <img src="{{ firstProduct.images[0] }}" class="card-img-top" alt="{{ firstProduct.productName|default('Ürün') }}">
                                    {% else %}
                                        <div class="no-image">Resim yok</div>
                                    {% endif %}
                                    <div class="variant-count-badge">
                                        {{ products|length }} varyasyon
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title">{{ firstProduct.productName|default('İsimsiz Ürün') }}</h5>
                                </div>
                                <div class="card-footer bg-transparent border-0 text-center">
                                    <button class="btn btn-sm btn-primary toggle-variants">Varyantları Göster</button>
                                </div>
                            </div>
                        </div>
                        <!-- Varyantlar bu ürünün altına yerleştirilecek -->
                        <div class="variants-row d-none" id="variants-{{ mainCode }}">
                            <div class="variants-container p-3 rounded">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <h5 class="variant-title mb-0">Varyantlar</h5>
                                    <button class="btn btn-sm btn-outline-secondary close-variants">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                                <div class="variants-content">
                                    <!-- Varyantlar buraya dinamik olarak eklenecek -->
                                </div>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            {% else %}
                <div class="col-12">
                    <div class="alert alert-info">Hiçbir ürün bulunamadı.</div>
                </div>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .product-group-card {
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
        }

        .product-group-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }

        .product-group-card.active {
            box-shadow: 0 0 0 3px #0d6efd, 0 10px 20px rgba(0,0,0,0.1);
        }

        .card-img-container {
            height: 200px;
            overflow: hidden;
            position: relative;
            border-radius: 8px 8px 0 0;
        }

        .card-img-top {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

        .card:hover .card-img-top {
            transform: scale(1.05);
        }

        .variant-count-badge {
            position: absolute;
            bottom: 0;
            right: 0;
            background-color: rgba(13, 110, 253, 0.8);
            color: white;
            padding: 4px 8px;
            font-size: 12px;
            border-radius: 8px 0 0 0;
        }

        .no-image {
            height: 100%;
            background-color: #f8f9fa;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6c757d;
        }

        /* Varyantlar bölümü için stiller */
        .variants-row {
            grid-column: 1 / -1;
            width: 100%;
            margin-top: 1rem;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
        }

        .variants-container {
            background-color: #f8f9fa;
            border: 1px solid #e9ecef;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            transition: all 0.3s ease;
        }

        /* Varyant kartları için stiller */
        .variant-card {
            border-radius: 8px;
            overflow: hidden;
            transition: all 0.3s ease;
            height: 100%;
            margin-bottom: 15px;
        }

        .variant-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 15px rgba(0,0,0,0.1);
        }

        .variant-img-container {
            height: 160px;
            overflow: hidden;
            position: relative;
        }

        .variant-img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .variant-card:hover .variant-img {
            transform: scale(1.05);
        }

        .discount-badge {
            position: absolute;
            top: 0;
            right: 0;
            background-color: #dc3545;
            color: white;
            padding: 4px 8px;
            font-size: 12px;
            border-radius: 0 0 0 8px;
            z-index: 1;
        }

        /* Editing form styles */
        .edit-form {
            background-color: #fff;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
            margin-top: 15px;
        }

        /* Responsive düzenlemeler */
        @media (max-width: 767px) {
            .card-img-container {
                height: 160px;
            }

            .variant-img-container {
                height: 140px;
            }
        }

        @media (max-width: 576px) {
            .card-img-container {
                height: 180px;
            }
        }
    </style>
{% endblock %}

{% block body_scripts %}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const productContainer = document.getElementById('product-container');

            // Varyantları göster/gizle butonları için event listener
            document.querySelectorAll('.toggle-variants').forEach(button => {
                button.addEventListener('click', function(e) {
                    e.stopPropagation();

                    const productWrapper = this.closest('.product-wrapper');
                    const mainCode = productWrapper.dataset.mainCode;
                    const variantsRow = document.getElementById(`variants-${mainCode}`);
                    const productName = productWrapper.querySelector('.card-title').textContent;

                    // Diğer tüm açık varyant bölümlerini kapat
                    document.querySelectorAll('.variants-row:not(.d-none)').forEach(row => {
                        if (row !== variantsRow) {
                            row.classList.add('d-none');
                            const cardParent = row.previousElementSibling;
                            if (cardParent) {
                                cardParent.querySelector('.product-group-card').classList.remove('active');
                                cardParent.querySelector('.toggle-variants').textContent = 'Varyantları Göster';
                            }
                        }
                    });

                    // Bu ürünün varyant bölümünü aç/kapat
                    if (variantsRow.classList.contains('d-none')) {
                        variantsRow.classList.remove('d-none');
                        this.closest('.product-group-card').classList.add('active');
                        this.textContent = 'Varyantları Gizle';

                        // Varyantları yükle
                        loadVariants(mainCode, productName, variantsRow.querySelector('.variants-content'));

                        // Sayfayı varyantların görüneceği yere kaydır
                        setTimeout(() => {
                            variantsRow.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
                        }, 100);
                    } else {
                        variantsRow.classList.add('d-none');
                        this.closest('.product-group-card').classList.remove('active');
                        this.textContent = 'Varyantları Göster';
                    }
                });
            });

            // Close buttons for variants
            document.addEventListener('click', function(e) {
                if (e.target.closest('.close-variants')) {
                    const variantsRow = e.target.closest('.variants-row');
                    const productWrapper = e.target.closest('.product-wrapper');

                    variantsRow.classList.add('d-none');
                    productWrapper.querySelector('.product-group-card').classList.remove('active');
                    productWrapper.querySelector('.toggle-variants').textContent = 'Varyantları Göster';
                }
            });

            // Varyantları yükleme fonksiyonu
            function loadVariants(mainCode, productName, container) {
                container.innerHTML = '<div class="text-center py-3"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Yükleniyor...</span></div></div>';

                // Varyant verilerini oluştur
                let variantsHTML = '';

                {% if groupedListings is defined %}
                {% for code, listings in groupedListings %}
                if ('{{ code }}' === mainCode) {
                    // Varyant kartlarını oluştur
                    variantsHTML += '<div class="row g-3">';

                    {% for listing in listings %}
                    variantsHTML += `
                                    <div class="col-12 col-md-6 col-lg-4">
                                        <div class="card variant-card">
                                            <div class="variant-img-container">
                                                {% if listing.discountPercentage is defined %}
                                                    <div class="discount-badge">%{{ listing.discountPercentage }}</div>
                                                {% endif %}
                                                {% if listing.images is defined and listing.images|length > 0 %}
                                                    <img src="{{ listing.images[0] }}" class="variant-img" alt="{{ listing.productName|default('Ürün')|e('js') }}">
                                                {% else %}
                                                    <div class="no-image">Resim yok</div>
                                                {% endif %}
                                            </div>
                                            <div class="card-body">
                                                <h6 class="variant-name">{{ listing.productName|default('İsimsiz Ürün')|e('js') }}</h6>
                                                {% if listing.price is defined %}
                                                    <p class="price text-primary fw-bold">{{ listing.price }}</p>
                                                {% endif %}

                                                <div class="d-flex justify-content-between align-items-center mt-3">
                                                    <a href="{{ listing.link|default('#')|e('js') }}" class="btn btn-sm btn-primary" target="_blank">
                                                        Ürüne Git
                                                    </a>
                                                    <button class="btn btn-sm btn-outline-secondary edit-variant"
                                                        data-variant-id="{{ loop.index }}">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                </div>

                                                <div class="edit-form-container mt-3 d-none" id="edit-form-{{ loop.index }}">
                                                    <form class="edit-variant-form">
                                                        <div class="mb-2">
                                                            <label class="form-label small">Ürün Adı</label>
                                                            <input type="text" class="form-control form-control-sm"
                                                                name="productName" value="{{ listing.productName|default('İsimsiz Ürün')|e('js') }}">
                                                        </div>
                                                        <div class="mb-2">
                                                            <label class="form-label small">Fiyat</label>
                                                            <input type="text" class="form-control form-control-sm"
                                                                name="price" value="{{ listing.price|default('')|e('js') }}">
                                                        </div>
                                                        <div class="d-flex justify-content-between">
                                                            <button type="submit" class="btn btn-sm btn-success">Kaydet</button>
                                                            <button type="button" class="btn btn-sm btn-outline-secondary cancel-edit">İptal</button>
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                `;
                    {% endfor %}

                    variantsHTML += '</div>';
                }
                {% endfor %}
                {% endif %}

                // Eğer veri yoksa bilgi mesajı göster
                if (variantsHTML === '') {
                    variantsHTML = '<div class="alert alert-info">Bu ürün için varyant bulunamadı.</div>';
                }

                // Oluşturulan HTML'i container'a ekle
                setTimeout(() => {
                    container.innerHTML = variantsHTML;

                    // Düzenleme formu işlevleri
                    container.querySelectorAll('.edit-variant').forEach(btn => {
                        btn.addEventListener('click', function() {
                            const variantId = this.dataset.variantId;
                            const formContainer = document.getElementById(`edit-form-${variantId}`);
                            formContainer.classList.toggle('d-none');
                        });
                    });

                    container.querySelectorAll('.cancel-edit').forEach(btn => {
                        btn.addEventListener('click', function() {
                            this.closest('.edit-form-container').classList.add('d-none');
                        });
                    });

                    container.querySelectorAll('.edit-variant-form').forEach(form => {
                        form.addEventListener('submit', function(e) {
                            e.preventDefault();

                            // Burada form verilerini işleyebilirsiniz
                            const formData = new FormData(this);
                            const productName = formData.get('productName');
                            const price = formData.get('price');

                            // Form verilerini API'ye gönderme işlemi burada yapılabilir
                            console.log('Güncelleme verileri:', { productName, price });

                            // Form başarıyla gönderildi mesajı
                            this.closest('.edit-form-container').classList.add('d-none');

                            // Başarılı mesajını göster
                            const successAlert = document.createElement('div');
                            successAlert.className = 'alert alert-success mt-2 small py-2';
                            successAlert.textContent = 'Güncelleme başarılı!';
                            this.closest('.card-body').appendChild(successAlert);

                            // 2 saniye sonra mesajı kaldır
                            setTimeout(() => {
                                successAlert.remove();
                            }, 2000);
                        });
                    });

                }, 500); // Yükleniyor animasyonunu göstermek için kısa bir gecikme
            }
        });
    </script>

{% endblock %}

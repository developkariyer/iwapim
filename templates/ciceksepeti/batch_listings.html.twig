<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Çiçeksepeti Batch Listesi</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <style>
        :root {
            --primary-color: #4f46e5;
            --secondary-color: #64748b;
            --success-color: #10b981;
            --danger-color: #ef4444;
            --warning-color: #f59e0b;
            --info-color: #0ea5e9;
            --light-color: #f8fafc;
            --dark-color: #1e293b;
            --border-radius: 0.5rem;
            --box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }

        body {
            background-color: #f1f5f9;
            font-family: 'Inter', sans-serif;
            color: var(--dark-color);
            padding-top: 2rem;
            padding-bottom: 2rem;
        }

        .card {
            border: none;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            overflow: hidden;
            margin-bottom: 1.5rem;
        }

        .header-card {
            background-color: white;
        }

        .btn-back {
            color: var(--secondary-color);
            display: inline-flex;
            align-items: center;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.2s;
            padding: 0.5rem 0.75rem;
            border-radius: 0.375rem;
        }

        .btn-back:hover {
            background-color: #f1f5f9;
            color: var(--primary-color);
        }

        .card-header {
            background-color: var(--primary-color);
            color: white;
            font-weight: 600;
            padding: 1rem 1.25rem;
            border-bottom: none;
        }

        .btn-refresh {
            background-color: white;
            color: var(--primary-color);
            border: 1px solid rgba(255, 255, 255, 0.5);
            transition: all 0.2s;
        }

        .btn-refresh:hover {
            background-color: rgba(255, 255, 255, 0.9);
            color: var(--primary-color);
        }

        .table {
            margin-bottom: 0;
        }

        .table thead th {
            background-color: #f8fafc;
            color: var(--secondary-color);
            font-weight: 600;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.025em;
            padding: 0.85rem 1rem;
            border-bottom: 1px solid #e2e8f0;
        }

        .batch-row {
            cursor: pointer;
            transition: background-color 0.15s;
        }

        .batch-row:hover {
            background-color: rgba(79, 70, 229, 0.04);
        }

        .batch-row.active {
            background-color: rgba(79, 70, 229, 0.08);
        }

        .batch-row td {
            vertical-align: middle;
            padding: 1rem;
            border-bottom: 1px solid #e2e8f0;
        }

        .toggle-items {
            width: 32px;
            height: 32px;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: all 0.2s;
            background-color: #f1f5f9;
            color: var(--secondary-color);
            border: 1px solid #e2e8f0;
        }

        .toggle-items:hover {
            background-color: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        .toggle-items.open {
            transform: rotate(180deg);
            background-color: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        .batch-id {
            font-weight: 600;
            color: var(--primary-color);
        }

        .batch-items-container {
            background-color: #f8fafc;
            padding: 1rem;
            border-radius: 0 0 0.5rem 0.5rem;
        }

        .badge {
            font-weight: 500;
            padding: 0.35em 0.65em;
            font-size: 0.75rem;
            border-radius: 9999px;
        }

        .badge.bg-success {
            background-color: var(--success-color) !important;
        }

        .badge.bg-danger {
            background-color: var(--danger-color) !important;
        }

        .badge.bg-primary {
            background-color: var(--info-color) !important;
        }

        .badge.bg-secondary {
            background-color: var(--secondary-color) !important;
        }

        .query-batch-btn {
            background-color: var(--info-color);
            border-color: var(--info-color);
            color: white;
            font-size: 0.875rem;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            display: inline-flex;
            align-items: center;
            transition: all 0.2s;
        }

        .query-batch-btn:hover {
            background-color: #0284c7;
            border-color: #0284c7;
        }

        .batch-items-row td {
            padding: 0 !important;
        }

        .detail-table {
            margin-bottom: 0;
        }

        .detail-table thead th {
            background-color: #e2e8f0;
            color: var(--secondary-color);
            font-size: 0.8125rem;
            padding: 0.625rem 1rem;
            font-weight: 600;
        }

        .detail-table tbody td {
            padding: 0.75rem 1rem;
            border-bottom: 1px solid #e2e8f0;
            font-size: 0.875rem;
        }

        .toast-notification {
            position: fixed;
            bottom: 1.5rem;
            right: 1.5rem;
            z-index: 9999;
            min-width: 300px;
            border-radius: 0.5rem;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            padding: 1rem;
            font-weight: 500;
        }

        .alert-warning {
            background-color: #fffbeb;
            border-color: #fef3c7;
            color: #92400e;
        }

        .alert-danger {
            background-color: #fef2f2;
            border-color: #fee2e2;
            color: #b91c1c;
        }

        .empty-state, .error-state {
            text-align: center;
            padding: 3rem 2rem;
        }

        .empty-icon, .error-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
        }

        .empty-icon {
            color: #cbd5e1;
        }

        .error-icon {
            color: var(--danger-color);
        }

        .empty-title, .error-title {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .empty-message, .error-message {
            color: var(--secondary-color);
            max-width: 500px;
            margin: 0 auto;
        }

        /* JSON Modal Styles */
        .batch-details-modal .modal-dialog {
            max-width: 90%;
            margin: 1.75rem auto;
        }

        .batch-details-modal .modal-content {
            border: none;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
        }

        .batch-details-modal .modal-header {
            background-color: var(--primary-color);
            color: white;
            border-bottom: none;
            padding: 1rem 1.5rem;
        }

        .batch-details-modal .btn-close {
            color: white;
            filter: invert(1) brightness(200%);
            opacity: 0.8;
        }

        .batch-details-modal .btn-close:hover {
            opacity: 1;
        }

        .json-viewer {
            max-height: 70vh;
            overflow: auto;
            background-color: #1e1e1e;
            border-radius: 0.5rem;
            padding: 1.5rem;
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', monospace;
            font-size: 0.9rem;
            line-height: 1.5;
            color: #d4d4d4;
            white-space: pre-wrap;
        }

        .json-key {
            color: #9cdcfe;
        }

        .json-string {
            color: #ce9178;
        }

        .json-number {
            color: #b5cea8;
        }

        .json-boolean {
            color: #569cd6;
        }

        .json-null {
            color: #569cd6;
            font-style: italic;
        }

        .copy-json-btn {
            position: absolute;
            top: 15px;
            right: 60px;
            z-index: 1056;
            background-color: rgba(255, 255, 255, 0.2);
            color: white;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            font-size: 0.875rem;
            transition: all 0.2s;
        }

        .copy-json-btn:hover {
            background-color: rgba(255, 255, 255, 0.3);
        }

        .json-toolbar {
            position: sticky;
            top: 0;
            background-color: #1e1e1e;
            padding: 0.5rem;
            border-radius: 0.5rem 0.5rem 0 0;
            display: flex;
            justify-content: flex-end;
            gap: 0.5rem;
            z-index: 1;
            margin: -1.5rem -1.5rem 0.5rem -1.5rem;
            border-bottom: 1px solid #333;
            padding-right: 1rem;
        }

        .btn-toolbar {
            background-color: rgba(255, 255, 255, 0.1);
            border: none;
            color: #d4d4d4;
            border-radius: 0.25rem;
            padding: 0.25rem 0.5rem;
            font-size: 0.8125rem;
            display: inline-flex;
            align-items: center;
            transition: all 0.15s;
        }

        .btn-toolbar:hover {
            background-color: rgba(255, 255, 255, 0.2);
            color: white;
        }

        .btn-toolbar:active {
            background-color: rgba(255, 255, 255, 0.15);
        }

        @media (max-width: 768px) {
            .d-flex.gap-2 {
                flex-wrap: wrap;
            }

            .batch-details-modal .modal-dialog {
                max-width: 95%;
                margin: 0.5rem auto;
            }

            .json-viewer {
                font-size: 0.8rem;
                padding: 1rem;
            }
        }
    </style>
</head>
<body>
<div class="container">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card header-card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <h1 class="h3 mb-0 fw-bold">Çiçeksepeti Batch Listesi</h1>
                        <a href="/ciceksepeti" class="btn-back">
                            <i class="fas fa-arrow-left me-2"></i>Geri Dön
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Error Message -->
    {% if errorMessage is defined and errorMessage %}
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="error-state">
                        <i class="fas fa-exclamation-triangle error-icon" aria-hidden="true"></i>
                        <h4 class="error-title">Hata</h4>
                        <p class="error-message">{{ errorMessage }}</p>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    <!-- No Data Message -->
    {% if (errorMessage is not defined or not errorMessage) and (batchData is not defined or batchData is empty) %}
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="empty-state">
                        <i class="fas fa-clipboard-list empty-icon" aria-hidden="true"></i>
                        <h4 class="empty-title">Batch verisi bulunamadı</h4>
                        <p class="empty-message">Henüz oluşturulmuş bir batch bulunmuyor.</p>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}

    <!-- Batch Data -->
    {% if batchData is defined and batchData is not empty %}
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-layer-group me-2"></i>
                            <span>Batch Verileri</span>
                            {% if batchData|length %}
                                <span class="badge bg-light text-dark ms-2">{{ batchData|length }} adet</span>
                            {% endif %}
                        </div>
                        <button id="refreshBtn" class="btn btn-sm btn-refresh" aria-label="Listeyi yenile">
                            <i class="fas fa-sync-alt me-1" aria-hidden="true"></i> Yenile
                        </button>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0" id="batchTable">
                                <thead>
                                <tr>
                                    <th width="50" class="text-center"></th>
                                    <th>Batch ID</th>
                                    <th>Ana Ürün Kodu</th>
                                    <th>Oluşturma Tarihi</th>
                                    <th>Durum</th>
                                    <th width="120">İşlemler</th>
                                </tr>
                                </thead>
                                <tbody>
                                {% set groupedBatches = {} %}

                                {# Önce batch ID'ye göre gruplandırma yap #}
                                {% for batch in batchData %}
                                    {% for item in batch %}
                                        {% set batchId = item.batchId|default('-') %}
                                        {% set itemMainProduct = item.mainProduct|default('-') %}
                                        {% set itemCreatedDate = item.createdDate is defined ? item.createdDate : null %}

                                        {% if batchId != '-' %}
                                            {% if groupedBatches[batchId] is not defined %}
                                                {% set groupedBatches = groupedBatches|merge({
                                                    (batchId): {
                                                        'batchId': batchId,
                                                        'mainProduct': itemMainProduct,
                                                        'createdDate': itemCreatedDate,
                                                        'items': []
                                                    }
                                                }) %}
                                            {% endif %}

                                            {% set groupedBatches = groupedBatches|merge({
                                                (batchId): {
                                                    'batchId': batchId,
                                                    'mainProduct': itemMainProduct,
                                                    'createdDate': itemCreatedDate,
                                                    'items': groupedBatches[batchId].items|merge([item])
                                                }
                                            }) %}
                                        {% endif %}
                                    {% endfor %}
                                {% endfor %}

                                {# Tarihe göre sırala (yeniden eskiye) #}
                                {% set sortedBatches = [] %}
                                {% for batchId, batchGroup in groupedBatches %}
                                    {% set sortedBatches = sortedBatches|merge([batchGroup]) %}
                                {% endfor %}

                                {% set sortedBatches = sortedBatches|sort((a, b) => b.createdDate|date('U') <=> a.createdDate|date('U')) %}

                                {# Gruplandırılmış ve sıralanmış veriyi göster #}
                                {% for batchGroup in sortedBatches %}
                                    <tr class="batch-row" data-batch-id="{{ batchGroup.batchId }}">
                                        <td class="text-center">
                                            <button class="toggle-items btn btn-sm"
                                                    data-batch-id="{{ batchGroup.batchId }}"
                                                    aria-expanded="false"
                                                    aria-controls="batch-items-{{ batchGroup.batchId }}"
                                                    aria-label="Batch detaylarını göster/gizle">
                                                <i class="fas fa-chevron-down"></i>
                                            </button>
                                        </td>
                                        <td class="batch-id">{{ batchGroup.batchId }}</td>
                                        <td>{{ batchGroup.mainProduct }}</td>
                                        <td>
                                            {% if batchGroup.createdDate %}
                                                <span class="text-secondary">
                                                    <i class="far fa-calendar-alt me-1"></i>
                                                    {{ batchGroup.createdDate|date('d.m.Y H:i') }}
                                                </span>
                                            {% else %}
                                                -
                                            {% endif %}
                                        </td>
                                        <td>
                                            {% set totalItems = batchGroup.items|length %}
                                            {% set successCount = 0 %}
                                            {% set failedCount = 0 %}
                                            {% set processingCount = 0 %}

                                            {% for item in batchGroup.items %}
                                                {% if item.status == 'Success' %}
                                                    {% set successCount = successCount + 1 %}
                                                {% elseif item.status == 'Failed' %}
                                                    {% set failedCount = failedCount + 1 %}
                                                {% elseif item.status == 'Processing' %}
                                                    {% set processingCount = processingCount + 1 %}
                                                {% endif %}
                                            {% endfor %}

                                            <div class="d-flex gap-2 align-items-center flex-wrap">
                                                {% if successCount > 0 %}
                                                    <span class="badge bg-success">
                                                        <i class="fas fa-check-circle me-1"></i>
                                                        {{ successCount }} Başarılı
                                                    </span>
                                                {% endif %}

                                                {% if failedCount > 0 %}
                                                    <span class="badge bg-danger">
                                                        <i class="fas fa-times-circle me-1"></i>
                                                        {{ failedCount }} Başarısız
                                                    </span>
                                                {% endif %}

                                                {% if processingCount > 0 %}
                                                    <span class="badge bg-primary">
                                                        <i class="fas fa-sync-alt me-1"></i>
                                                        {{ processingCount }} İşleniyor
                                                    </span>
                                                {% endif %}

                                                <span class="badge bg-secondary">
                                                    <i class="fas fa-tag me-1"></i>
                                                    Toplam: {{ totalItems }}
                                                </span>
                                            </div>
                                        </td>
                                        <td>
                                            <button class="query-batch-btn btn btn-sm"
                                                    data-batch-id="{{ batchGroup.batchId }}"
                                                    aria-label="Batch'i sorgula">
                                                <i class="fas fa-search me-1" aria-hidden="true"></i> Sorgula
                                            </button>
                                        </td>
                                    </tr>
                                    <tr class="batch-items-row d-none" id="batch-items-{{ batchGroup.batchId }}">
                                        <td colspan="6" class="p-0">
                                            <div class="batch-items-container">
                                                <table class="table detail-table table-sm mb-0">
                                                    <thead>
                                                    <tr>
                                                        <th>IWASKU</th>
                                                        <th>Durum</th>
                                                    </tr>
                                                    </thead>
                                                    <tbody>
                                                    {% for item in batchGroup.items %}
                                                        <tr class="batch-item">
                                                            <td>{{ item.iwasku|default('-') }}</td>
                                                            <td>
                                                                {% if item.status == 'Success' %}
                                                                    <span class="badge bg-success" role="status">
                                                                        <i class="fas fa-check-circle me-1"></i>
                                                                        {{ item.status }}
                                                                    </span>
                                                                {% elseif item.status == 'Failed' %}
                                                                    <span class="badge bg-danger" role="status">
                                                                        <i class="fas fa-times-circle me-1"></i>
                                                                        {{ item.status }}
                                                                    </span>
                                                                {% elseif item.status == 'Processing' %}
                                                                    <span class="badge bg-primary" role="status">
                                                                        <i class="fas fa-sync-alt me-1"></i>
                                                                        {{ item.status }}
                                                                    </span>
                                                                {% else %}
                                                                    <span class="badge bg-secondary" role="status">
                                                                        <i class="fas fa-question-circle me-1"></i>
                                                                        {{ item.status|default('Bilinmiyor') }}
                                                                    </span>
                                                                {% endif %}

                                                                {% if item.failureReasons is defined and item.failureReasons is not empty %}
                                                                    <div role="alert" class="mt-2">
                                                                        {% for reason in item.failureReasons %}
                                                                            <div class="text-danger small">{{ reason.message }} ({{ reason.code }})</div>
                                                                        {% endfor %}
                                                                    </div>
                                                                {% endif %}
                                                            </td>
                                                        </tr>
                                                    {% endfor %}
                                                    </tbody>
                                                </table>
                                            </div>
                                        </td>
                                    </tr>
                                {% endfor %}
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}
</div>

<!-- Batch Details Modal -->
<div class="modal fade batch-details-modal" id="batchDetailsModal" tabindex="-1" aria-labelledby="batchDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-fullscreen-lg-down">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="batchDetailsModalLabel">
                    <i class="fas fa-search me-2"></i>
                    Batch Sorgu Sonucu: <span id="modalBatchId"></span>
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>
            <div class="modal-body">
                <div id="batchResponseLoader" class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Yükleniyor...</span>
                    </div>
                    <p class="mt-3 text-secondary">Batch bilgileri alınıyor...</p>
                </div>

                <div id="batchResponseError" class="alert alert-danger d-none" role="alert">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <span id="batchResponseErrorMessage">Hata oluştu.</span>
                </div>

                <div id="batchResponseContainer" class="d-none">
                    <div id="jsonViewer" class="json-viewer">
                        <div class="json-toolbar">
                            <button id="copyJsonBtn" class="btn-toolbar">
                                <i class="fas fa-copy me-1"></i> Kopyala
                            </button>
                            <button id="expandJsonBtn" class="btn-toolbar">
                                <i class="fas fa-expand-alt me-1"></i> Genişlet
                            </button>
                            <button id="collapseJsonBtn" class="btn-toolbar">
                                <i class="fas fa-compress-alt me-1"></i> Daralt
                            </button>
                        </div>
                        <pre id="jsonContent"></pre>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Sayfayı yenile
        const refreshBtn = document.getElementById('refreshBtn');
        if (refreshBtn) {
            refreshBtn.addEventListener('click', function() {
                this.disabled = true;
                const originalHTML = this.innerHTML;
                this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Yenileniyor...';
                setTimeout(() => {
                    window.location.reload();
                }, 300);
            });
        }

        // Batch detaylarını aç/kapat
        document.querySelectorAll('.toggle-items').forEach(button => {
            button.addEventListener('click', function(e) {
                e.stopPropagation();

                const batchId = this.getAttribute('data-batch-id');
                const itemsRow = document.getElementById(`batch-items-${batchId}`);
                const parentRow = this.closest('.batch-row');
                const isOpen = this.classList.contains('open');

                // Diğer açık satırları kapat
                document.querySelectorAll('.batch-items-row').forEach(row => {
                    if (row.id !== `batch-items-${batchId}`) {
                        row.classList.add('d-none');
                    }
                });

                document.querySelectorAll('.toggle-items').forEach(btn => {
                    if (btn !== this) {
                        btn.classList.remove('open');
                        btn.closest('.batch-row').classList.remove('active');
                    }
                });

                // Bu satırı aç/kapa
                if (isOpen) {
                    this.classList.remove('open');
                    itemsRow.classList.add('d-none');
                    parentRow.classList.remove('active');
                    this.setAttribute('aria-expanded', 'false');
                } else {
                    this.classList.add('open');
                    itemsRow.classList.remove('d-none');
                    parentRow.classList.add('active');
                    this.setAttribute('aria-expanded', 'true');
                }
            });
        });

        // Satıra tıklandığında detayları aç/kapat
        document.querySelectorAll('.batch-row').forEach(row => {
            row.addEventListener('click', function(e) {
                // Toggle butonuna veya sorgulama butonuna tıklandıysa işleme
                if (e.target.closest('.toggle-items') || e.target.closest('.query-batch-btn')) {
                    return;
                }

                const batchId = this.getAttribute('data-batch-id');
                const toggleButton = this.querySelector(`.toggle-items[data-batch-id="${batchId}"]`);

                if (toggleButton) {
                    toggleButton.click();
                }
            });
        });

        // Batch sorgulama
        document.querySelectorAll('.query-batch-btn').forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.stopPropagation(); // Satır tıklamasını engelle

                const batchId = this.getAttribute('data-batch-id');

                if (!batchId) {
                    showToast('Batch ID bilgisi eksik!', 'danger');
                    return;
                }

                // Modal'ı açma ve hazırlama
                const batchDetailsModal = new bootstrap.Modal(document.getElementById('batchDetailsModal'));
                document.getElementById('modalBatchId').textContent = batchId;
                document.getElementById('batchResponseLoader').classList.remove('d-none');
                document.getElementById('batchResponseError').classList.add('d-none');
                document.getElementById('batchResponseContainer').classList.add('d-none');
                document.getElementById('jsonContent').innerHTML = '';

                batchDetailsModal.show();

                // API isteği
                fetch(`/api/update-batch/${batchId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        batchId: batchId,
                        queryOnly: true
                    })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP hata: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        // Yükleme göstergesini gizle
                        document.getElementById('batchResponseLoader').classList.add('d-none');

                        if (data.success) {
                            // JSON görünümünü göster
                            document.getElementById('batchResponseContainer').classList.remove('d-none');

                            // JSON'u formatlama ve gösterme
                            const jsonData = data.response || {};
                            const formattedJson = syntaxHighlight(JSON.stringify(jsonData, null, 2));
                            document.getElementById('jsonContent').innerHTML = formattedJson;

                            // JSON genişlet/daralt düğmeleri
                            setupJsonViewerButtons(jsonData);
                        } else {
                            // Hata mesajını göster
                            document.getElementById('batchResponseError').classList.remove('d-none');
                            document.getElementById('batchResponseErrorMessage').textContent =
                                data.message || 'Batch bilgileri alınamadı.';
                        }
                    })
                    .catch(error => {
                        console.error('Sorgulama hatası:', error);
                        // Hata mesajını göster
                        document.getElementById('batchResponseLoader').classList.add('d-none');
                        document.getElementById('batchResponseError').classList.remove('d-none');
                        document.getElementById('batchResponseErrorMessage').textContent =
                            `Bağlantı hatası: ${error.message}`;
                    });
            });
        });

        // JSON viewer butonlarını ayarla
        function setupJsonViewerButtons(jsonData) {
            // Kopyala butonu
            document.getElementById('copyJsonBtn').addEventListener('click', function() {
                copyToClipboard(JSON.stringify(jsonData, null, 2));
                showToast('JSON veri panoya kopyalandı', 'success');
            });

            // Genişlet butonu
            document.getElementById('expandJsonBtn').addEventListener('click', function() {
                const formattedJson = syntaxHighlight(JSON.stringify(jsonData, null, 2));
                document.getElementById('jsonContent').innerHTML = formattedJson;
            });

            // Daralt butonu
            document.getElementById('collapseJsonBtn').addEventListener('click', function() {
                const formattedJson = syntaxHighlight(JSON.stringify(jsonData));
                document.getElementById('jsonContent').innerHTML = formattedJson;
            });
        }

        // JSON sözdizimi vurgulama
        function syntaxHighlight(json) {
            json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
            return json.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function (match) {
                let cls = 'json-number';
                if (/^"/.test(match)) {
                    if (/:$/.test(match)) {
                        cls = 'json-key';
                    } else {
                        cls = 'json-string';
                    }
                } else if (/true|false/.test(match)) {
                    cls = 'json-boolean';
                } else if (/null/.test(match)) {
                    cls = 'json-null';
                }
                return '<span class="' + cls + '">' + match + '</span>';
            });
        }

        // Panoya kopyala
        function copyToClipboard(text) {
            const textarea = document.createElement('textarea');
            textarea.value = text;
            document.body.appendChild(textarea);
            textarea.select();
            document.execCommand('copy');
            document.body.removeChild(textarea);
        }

        // Toast bildirim göster
        function showToast(message, type = 'info') {
            const existingToast = document.querySelector('.toast-notification');
            if (existingToast) {
                existingToast.remove();
            }

            const toast = document.createElement('div');
            toast.className = `toast-notification alert alert-${type}`;
            toast.setAttribute('role', 'alert');
            toast.setAttribute('aria-live', 'assertive');
            toast.setAttribute('aria-atomic', 'true');

            // İkon ekle
            let icon = '';
            if (type === 'success') {
                icon = '<i class="fas fa-check-circle me-2"></i>';
            } else if (type === 'danger') {
                icon = '<i class="fas fa-exclamation-circle me-2"></i>';
            } else if (type === 'warning') {
                icon = '<i class="fas fa-exclamation-triangle me-2"></i>';
            } else {
                icon = '<i class="fas fa-info-circle me-2"></i>';
            }

            toast.innerHTML = `${icon}${message}`;
            document.body.appendChild(toast);

            setTimeout(() => {
                toast.remove();
            }, 3000);
        }
    });
</script>
</body>
</html>
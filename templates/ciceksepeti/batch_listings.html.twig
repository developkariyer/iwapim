{% extends 'base.html.twig' %}
{% block title %} Çiçeksepeti Batch Listesi {% endblock %}
{% block navbaritems %}{% endblock %}
{% block header %}{% endblock %}

{% block content %}
    <div class="container-fluid mt-4">
        <div class="row mb-4">
            <div class="col-12 d-flex justify-content-between align-items-center">
                <h1>Çiçeksepeti Batch Listesi</h1>
                <a href="{{ path('ciceksepeti_main_page') }}" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Geri Dön
                </a>
            </div>
        </div>

        {% if errorMessage %}
            <div class="alert alert-danger">
                <div class="text-center py-4">
                    <i class="fas fa-exclamation-triangle fa-3x mb-3"></i>
                    <h4>Hata</h4>
                    <p>{{ errorMessage }}</p>
                </div>
            </div>
        {% elseif batchData is empty %}
            <div class="alert alert-warning">
                <div class="text-center py-4">
                    <i class="fas fa-exclamation-circle fa-3x mb-3"></i>
                    <h4>Batch verisi bulunamadı</h4>
                    <p>Henüz oluşturulmuş bir batch bulunmuyor.</p>
                </div>
            </div>
        {% else %}
            <div class="card mb-4">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Batch Verileri ({{ batchData|length }} adet)</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover">
                            <thead class="table-light">
                            <tr>
                                <th>Batch ID</th>
                                <th>Ana Ürün Kodu</th>
                                <th>IWASKU</th>
                                <th>Oluşturma Tarihi</th>
                                <th>Durum</th>
                                <th>İşlemler</th>
                            </tr>
                            </thead>
                            <tbody>
                            {% for batch in batchData %}
                                {% for item in batch %}
                                    <tr>
                                        <td>{{ item.batchId|default('-') }}</td>
                                        <td>{{ item.mainProduct|default('-') }}</td>
                                        <td>{{ item.iwasku|default('-') }}</td>
                                        <td>
                                            {% if item.createdDate is defined and item.createdDate %}
                                                {{ item.createdDate|date('d.m.Y H:i') }}
                                            {% else %}
                                                -
                                            {% endif %}
                                        </td>
                                        <td>
                                            {% if item.status == 'Success' %}
                                                <span class="badge bg-success">{{ item.status }}</span>
                                            {% elseif item.status == 'Failed' %}
                                                <span class="badge bg-danger">{{ item.status }}</span>
                                            {% elseif item.status == 'Processing' %}
                                                <span class="badge bg-primary">{{ item.status }}</span>
                                            {% else %}
                                                <span class="badge bg-secondary">{{ item.status|default('Bilinmiyor') }}</span>
                                            {% endif %}

                                            {% if item.failureReasons is defined and item.failureReasons is not empty %}
                                                {% for reason in item.failureReasons %}
                                                    <div class="text-danger small">{{ reason.message }} ({{ reason.code }})</div>
                                                {% endfor %}
                                            {% endif %}
                                        </td>
                                        <td>
                                            <button class="btn btn-sm btn-primary update-batch-btn"
                                                    data-batch-id="{{ item.batchId|default('') }}"
                                                    data-main-product="{{ item.mainProduct|default('') }}"
                                                    data-iwasku="{{ item.iwasku|default('') }}">
                                                <i class="fas fa-sync-alt me-1"></i> Güncelle
                                            </button>
                                        </td>
                                    </tr>
                                {% endfor %}
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        {% endif %}
    </div>
{% endblock %}

{% block body_scripts %}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Güncelleme butonlarına tıklandığında
            document.querySelectorAll('.update-batch-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const batchId = this.getAttribute('data-batch-id');
                    const mainProduct = this.getAttribute('data-main-product');
                    const iwasku = this.getAttribute('data-iwasku');

                    if (!batchId) {
                        alert('Batch ID bilgisi eksik!');
                        return;
                    }

                    if (!confirm(`"${mainProduct}" - "${iwasku}" ürününü güncellemek istediğinizden emin misiniz?`)) {
                        return;
                    }

                    // Butonun eski durumunu sakla
                    const originalText = this.innerHTML;
                    this.disabled = true;
                    this.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Güncelleniyor...';

                    // API isteği gönder
                    fetch(`/api/update-batch/${batchId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            batchId: batchId,
                            mainProduct: mainProduct,
                            iwasku: iwasku
                        })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                showToast(`"${iwasku}" başarıyla güncellendi.`, 'success');
                                // Sayfayı yenile
                                setTimeout(() => {
                                    window.location.reload();
                                }, 1000);
                            } else {
                                showToast(data.message || 'Güncelleme sırasında hata oluştu.', 'danger');
                                // Butonu eski haline getir
                                this.disabled = false;
                                this.innerHTML = originalText;
                            }
                        })
                        .catch(error => {
                            console.error('Güncelleme hatası:', error);
                            showToast(`Bağlantı hatası: ${error.message}`, 'danger');
                            // Butonu eski haline getir
                            this.disabled = false;
                            this.innerHTML = originalText;
                        });
                });
            });

            // Toast bildirim fonksiyonu
            function showToast(message, type = 'info') {
                // Mevcut bildirimi kaldır
                const existingToast = document.querySelector('.toast-notification');
                if (existingToast) {
                    existingToast.remove();
                }

                // Yeni bildirim oluştur
                const toast = document.createElement('div');
                toast.className = `toast-notification alert alert-${type}`;
                toast.style.position = 'fixed';
                toast.style.bottom = '20px';
                toast.style.right = '20px';
                toast.style.zIndex = '9999';
                toast.style.minWidth = '250px';
                toast.style.boxShadow = '0 4px 8px rgba(0,0,0,0.2)';
                toast.innerHTML = message;

                document.body.appendChild(toast);

                // 3 saniye sonra kaldır
                setTimeout(() => {
                    toast.remove();
                }, 3000);
            }
        });
    </script>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .toast-notification {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 9999;
            min-width: 250px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
    </style>
{% endblock %}
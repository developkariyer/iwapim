{% extends 'base.html.twig' %}
{% block title %} Sticker {% endblock %}
{% block navbaritems %}
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Etiket
        </a>
        <ul class="dropdown-menu">
            <li><a class="dropdown-item" href="#" onclick="displayNewGroupForm()">Yeni Grup</a></li>
            <li><a class="dropdown-item" href="#" onclick="displayNewStickerForm()">Yeni Etiket</a></li>
        </ul>
    </li>
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Gruplar
        </a>
        <ul class="dropdown-menu">
            {% for group in groups %}
                <li><a class="dropdown-item" href="#" onclick="selectGroup('{{ group.name }}', {{ group.id }})">{{ group.name }}</a></li>
            {% endfor %}
        </ul>
    </li>
{% endblock %}
{% block header %}
    <div class="d-flex" role="search">
        <!--suppress HtmlFormInputWithoutLabel -->
        <input type="text" disabled id="searchInput" placeholder="Ara..." class="form-control-sm mb-3">
    </div>
{% endblock %}
{% block content %}
<div class="container mt-2">
    <div class="row d-none" id="newStickerForm">
        <div class="col-12 mt-5">
            <h1>Yeni Etiket Grubu Oluştur</h1>
            <form method="post" action="/sticker/add-sticker-group" class="mt-3">
                <!--suppress HtmlFormInputWithoutLabel -->
                <input type="text" name="form_data" placeholder="Grup İsmi" class="form-control mb-3">
                <div class="d-flex flex-column">
                    <button type="submit" class="btn btn-success mb-2">Grup Ekle</button>
                </div>
            </form>
        </div>
    </div>
    <div class="row d-none" id="newStickerProductForm">
        <div class="col-12 mt-5">
            <h1>Yeni Etiket Oluştur</h1>
            <form method="post" action="/sticker/add-sticker" class="mt-3">
                <div class="mb-3">
                    <label for="form_data">Ürün Kodu</label>
                    <input
                            type="text"
                            name="form_data"
                            id="form_data"
                            placeholder="IWASKU|ASIN"
                            class="form-control mb-3"
                            required>
                </div>
                <div class="mb-3">
                    <label for="group_id">Ürün Grubu</label>
                    <select
                            name="group_id"
                            id="group_id"
                            class="form-select"
                            required>
                        <option value="" disabled selected>Etiket Grubu</option>
                        {% for group in groups %}
                            <option value="{{ group.id }}">{{ group.name }}</option>
                        {% else %}
                            <option value="" disabled>Etiket Grubu Bulunamadı</option>
                        {% endfor %}
                    </select>
                </div>
                <button type="submit" class="btn btn-primary">Ekle</button>
            </form>
        </div>
    </div>
    <div class="" id="stickerList">
        <div class="row mt-2">
            <div class="col-12"><h5 id="groupTitle"></h5></div>
        </div>
        <div class="row mt-2">
            <div class="col-12"  id="stickers-container" style="overflow-x: auto;">
            </div>
            <nav class="col-12" aria-label="Page navigation">
                <ul id="pagination-container" class="pagination justify-content-center">
                </ul>
            </nav>
        </div>
    </div>
</div>
{% endblock %}


{% block body_scripts %}
    <script>
        let currentPage = 1;
        let totalPages = 1;
        let selectedGroupId = null;
        let searchTerm = '';
        let timeoutId;

        document.getElementById('searchInput').addEventListener('input', function() {
            searchTerm = this.value;
            let charCount = searchTerm.length;
            if (searchTerm.trim() === '' ) {
                clearTimeout(timeoutId);
                loadStickers(selectedGroupId, currentPage);
            }
            if (charCount > 2) {
                clearTimeout(timeoutId);
                timeoutId = setTimeout(function() {
                    loadStickers(selectedGroupId, currentPage, searchTerm);
                }, 250);
            }
        });

        function displayNewGroupForm() {
            document.getElementById('newStickerForm').classList.remove('d-none');
            document.getElementById('stickerList').classList.add('d-none');
            document.getElementById('newStickerProductForm').classList.add('d-none');
            document.getElementById('searchInput').disabled = true;
        }

        function displayNewStickerForm() {
            document.getElementById('newStickerProductForm').classList.remove('d-none');
            document.getElementById('newStickerForm').classList.add('d-none');
            document.getElementById('stickerList').classList.add('d-none');
            document.getElementById('searchInput').disabled = true;
        }

        function loadStickers(groupId, page = 1,  searchTerm = '') {
            const paginationContainer = document.getElementById('pagination-container');
            highlightSelectedGroup(groupId);
            selectedGroupId = groupId;
            currentPage = page;
            const container = document.getElementById('stickers-container');
            container.innerHTML = '<p>Loading...</p>';
            const searchParam = searchTerm !== '' ? `&searchTerm=${encodeURIComponent(searchTerm)}` : '';
            let url = `/sticker/get-stickers/${groupId}?page=${page}&limit=10`;
            if (searchParam) {
                url += searchParam;
            }
            fetch(url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch stickers. Status code: ' + response.status);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        container.innerHTML = Object.keys(data.stickers).map(identifier => {
                            const group = data.stickers[identifier];
                            const mainSticker = group[0];
                            return `
<div class="sticker-card" id="sticker-${identifier}">
    <div class="sticker-item-wrapper">
        <div class="sticker-primary-card">
            <div class="accordion" id="accordion-${identifier}">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="heading-${identifier}">
                        <button class="accordion-button collapsed" type="button"
                            data-bs-toggle="collapse"
                            data-bs-target="#collapse-${identifier}"
                            aria-expanded="false"
                            aria-controls="collapse-${identifier}"
                            onclick="loadDetails('${identifier}','${groupId}')">

                            <div class="sticker-content">
                                <div class="sticker-thumbnail">
                                    <div class="image-wrapper">
                                        <img src="${mainSticker.image_link}"
                                            alt="${mainSticker.product_name}"
                                            onerror="this.src='/images/no-image.png';this.onerror='';">
                                    </div>
                                </div>

                                <div class="sticker-info">
                                    <div class="sticker-header">
                                        <h3 class="sticker-identifier">${identifier}</h3>
                                        <span class="sticker-category desktop-only">
                                            <i class="bi bi-tag-fill"></i>
                                            <span>${mainSticker.category}</span>
                                        </span>
                                    </div>

                                    <p class="sticker-name">${mainSticker.product_name}</p>

                                    <span class="sticker-category mobile-only">
                                        <i class="bi bi-tag-fill"></i>
                                        <span>${mainSticker.category}</span>
                                    </span>
                                </div>

                                <div class="chevron-icon">
                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M6 9L12 15L18 9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    </svg>
                                </div>
                            </div>
                        </button>
                    </h2>

                    <div id="collapse-${identifier}"
                        class="accordion-collapse collapse"
                        aria-labelledby="heading-${identifier}"
                        data-bs-parent="#accordion-${identifier}">
                        <div class="accordion-body">
                            <div id="details-content-${identifier}" class="details-container">
                                <div class="loading-state">
                                    <div class="loading-spinner"></div>
                                    <span>Loading product details</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
`;
                        }).join('');
                        totalPages = data.pagination.total_pages;
                        if (searchTerm !== '') {
                            paginationContainer.style.visibility = 'hidden';
                        } else {
                            paginationContainer.style.visibility = 'visible';
                            renderPagination();
                        }
                    } else {
                        container.innerHTML = '<p>No stickers available for this group.</p>';
                    }
                })
                .catch(error => {
                    console.error('Error fetching stickers:', error);
                    container.innerHTML = '<p>An error occurred while loading stickers.</p>';
                });
        }

        function loadDetails(identifier, groupId) {
            const detailsContainer = document.getElementById(`details-content-${identifier}`);
            detailsContainer.innerHTML = '<div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div>';

            fetch(`/sticker/get-product-details/${identifier}/${groupId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const products = data.products;
                        products.sort((a, b) => {
                            return a.variationSize.localeCompare(b.variationSize, undefined, { numeric: true });
                        });

                        let detailsHtml = '';

                        products.forEach(product => {
                            const fnskusByAsin = {};

                            if (product.sticker_fnsku && product.sticker_fnsku.length > 0) {
                                product.sticker_fnsku.forEach(fnsku => {
                                    const parts = fnsku.split('_');
                                    const asin = parts[1];
                                    const fnskuCode = parts[2];
                                    const returnStatus = parts.includes('return') ? 'return' : 'notreturn';

                                    if (!fnskusByAsin[asin]) {
                                        fnskusByAsin[asin] = {
                                            return: [],
                                            notreturn: []
                                        };
                                    }

                                    fnskusByAsin[asin][returnStatus].push({
                                        fullCode: fnsku,
                                        code: fnskuCode
                                    });
                                });
                            }

                            detailsHtml += `
                                <div class="product-card mb-3">
                                    <div class="card-header">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <h5 class="product-title mb-0">
                                                <span class="product-id">${product.productIdentifier}</span>
                                                <span class="product-name">${product.name}</span>
                                            </h5>
                                            <div class="product-badges">
                                                <span class="size-badge">${product.variationSize}</span>
                                                ${product.variationColor ? `<span class="color-badge" style="background-color: ${getColorBackground(product.variationColor)};">${product.variationColor}</span>` : ''}
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-content">
                                        <div class="product-metadata">
                                            <div class="metadata-item">
                                                <i class="bi bi-box-seam"></i>
                                                <span>IWASKU: ${product.iwasku}</span>
                                            </div>
                                            <div class="product-actions">
                                                <a href="${product.sticker_link_eu}" target="_blank" class="action-btn eu-link">
                                                    <i class="bi bi-globe2"></i>
                                                    <span>EU</span>
                                                </a>
                                                <a href="${product.sticker_link}" target="_blank" class="action-btn iwasku-link">
                                                    <i class="bi bi-link-45deg"></i>
                                                    <span>IWASKU</span>
                                                </a>
                                            </div>
                                        </div>
                                `;

                            if (Object.keys(fnskusByAsin).length > 0) {
                                detailsHtml += `
                            <div class="accordion mt-2" id="asinAccordion-${product.iwasku}">
                        `;

                                Object.keys(fnskusByAsin).forEach((asin, index) => {
                                    const asinId = `asin-${product.iwasku}-${asin}`;

                                    detailsHtml += `
        <div class="accordion-item asin-accordion-item">
            <h2 class="accordion-header" id="heading-asin-${asinId}">
                <button class="accordion-button asin-accordion-button ${index > 0 ? 'collapsed' : ''}" type="button"
                    data-bs-toggle="collapse" data-bs-target="#${asinId}"
                    aria-expanded="${index === 0 ? 'true' : 'false'}" aria-controls="${asinId}">
                    <div class="asin-header">
                        <div class="asin-identifier">
                            <i class="bi bi-box me-2"></i>
                            <span>ASIN:</span>
                            <span class="asin-code">${asin}</span>
                        </div>
                        <div class="asin-chevron">
                            <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M6 9L12 15L18 9" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                        </div>
                    </div>
                </button>
            </h2>
            <div id="${asinId}" class="accordion-collapse collapse ${index === 0 ? 'show' : ''}"
                data-bs-parent="#asinAccordion-${product.iwasku}">
                <div class="accordion-body asin-content">
                    <ul class="nav nav-tabs fnsku-tabs" id="fnskuTabs-${asinId}" role="tablist">
    `;

                                    if (fnskusByAsin[asin].notreturn.length > 0) {
                                        detailsHtml += `
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="notreturn-tab-${asinId}" data-bs-toggle="tab"
                    data-bs-target="#notreturn-${asinId}" type="button" role="tab"
                    aria-controls="notreturn-${asinId}" aria-selected="true">
                    <i class="bi bi-tag me-1"></i> Standard
                </button>
            </li>
        `;
                                    }

                                    if (fnskusByAsin[asin].return.length > 0) {
                                        detailsHtml += `
            <li class="nav-item" role="presentation">
                <button class="nav-link ${fnskusByAsin[asin].notreturn.length === 0 ? 'active' : ''}"
                    id="return-tab-${asinId}" data-bs-toggle="tab"
                    data-bs-target="#return-${asinId}" type="button" role="tab"
                    aria-controls="return-${asinId}" aria-selected="${fnskusByAsin[asin].notreturn.length === 0 ? 'true' : 'false'}">
                    <i class="bi bi-arrow-return-left me-1"></i> Return
                </button>
            </li>
        `;
                                    }

                                    detailsHtml += `
                    </ul>
                    <div class="tab-content mt-2" id="fnskuTabContent-${asinId}">
    `;

                                    if (fnskusByAsin[asin].notreturn.length > 0) {
                                        detailsHtml += `
            <div class="tab-pane fade show active" id="notreturn-${asinId}"
                role="tabpanel" aria-labelledby="notreturn-tab-${asinId}">
                <div class="list-group">
        `;

                                        fnskusByAsin[asin].notreturn.forEach(fnsku => {
                                            detailsHtml += `
                <a href="${fnsku.fullCode}" target="_blank" class="list-group-item list-group-item-action">
                    <div class="d-flex justify-content-between align-items-center">
                        <span><i class="bi bi-upc me-2"></i>FNSKU: ${fnsku.code}</span>
                        <span class="badge bg-primary rounded-pill">
                            <i class="bi bi-printer me-1"></i> Print
                        </span>
                    </div>
                </a>
            `;
                                        });

                                        detailsHtml += `
                </div>
            </div>
        `;
                                    }

                                    if (fnskusByAsin[asin].return.length > 0) {
                                        detailsHtml += `
            <div class="tab-pane fade ${fnskusByAsin[asin].notreturn.length === 0 ? 'show active' : ''}"
                id="return-${asinId}" role="tabpanel" aria-labelledby="return-tab-${asinId}">
                <div class="list-group">
        `;

                                        fnskusByAsin[asin].return.forEach(fnsku => {
                                            detailsHtml += `
                <a href="${fnsku.fullCode}" target="_blank" class="list-group-item list-group-item-action">
                    <div class="d-flex justify-content-between align-items-center">
                        <span><i class="bi bi-upc me-2"></i>FNSKU: ${fnsku.code}</span>
                        <span class="badge bg-warning rounded-pill">
                            <i class="bi bi-printer me-1"></i> Print Return
                        </span>
                    </div>
                </a>
            `;
                                        });

                                        detailsHtml += `
                </div>
            </div>
        `;
                                    }

                                    detailsHtml += `
                    </div>
                </div>
            </div>
        </div>
    `;
                                });

                                detailsHtml += `
                            </div>
                        `;
                            }

                            detailsHtml += `
                        </div>
                    </div>
                    `;
                        });

                        detailsContainer.innerHTML = detailsHtml;
                    } else {
                        detailsContainer.innerHTML = '<div class="alert alert-danger">Failed to load details.</div>';
                    }
                })
                .catch(error => {
                    console.error('Error loading details:', error);
                    detailsContainer.innerHTML = '<div class="alert alert-danger">Error loading details.</div>';
                });
        }


        function renderPagination() {
            const paginationContainer = document.getElementById('pagination-container');
            paginationContainer.innerHTML = '';
            let paginationHTML = '';
            paginationHTML += `
            <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="loadStickers(selectedGroupId, 1)" aria-label="First">
                    <span aria-hidden="true">&laquo;&laquo;</span>
                </a>
            </li>`;

            paginationHTML += `
            <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="loadStickers(selectedGroupId, ${currentPage - 1})" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>`;

            const maxVisiblePages = 5;
            const firstVisiblePage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
            const lastVisiblePage = Math.min(totalPages, firstVisiblePage + maxVisiblePages - 1);

            for (let page = firstVisiblePage; page <= lastVisiblePage; page++) {
                paginationHTML += `
                <li class="page-item ${page === currentPage ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="loadStickers(selectedGroupId, ${page})">${page}</a>
                </li>`;
            }

            paginationHTML += `
            <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="loadStickers(selectedGroupId, ${currentPage + 1})" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>`;

            paginationHTML += `
            <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="loadStickers(selectedGroupId, ${totalPages})" aria-label="Last">
                    <span aria-hidden="true">&raquo;&raquo;</span>
                </a>
            </li>`;
            paginationContainer.innerHTML = paginationHTML;
        }

        function highlightSelectedGroup(groupId) {
            const groupLinks = document.querySelectorAll('.list-group-item');
            groupLinks.forEach(link => {
                if (parseInt(link.dataset.groupId) === groupId) {
                    link.classList.add('active');
                    link.setAttribute('aria-current', 'true');
                } else {
                    link.classList.remove('active');
                    link.removeAttribute('aria-current');
                }
            });
        }

        function selectGroup(groupName, groupId) {
            localStorage.setItem('group_id', groupId);
            document.getElementById("groupTitle").innerHTML = groupName;
            document.getElementById('searchInput').value = '';
            document.getElementById('searchInput').disabled = false;
            document.getElementById('newStickerForm').classList.add('d-none');
            document.getElementById('newStickerProductForm').classList.add('d-none');
            document.getElementById('stickerList').classList.remove('d-none');
            loadStickers(groupId, 1, searchTerm);
        }
        function getColorBackground(colorName) {
            const colorMap = {
                'black': '#000000',
                'white': '#ffffff',
                'red': '#dc2626',
                'blue': '#2563eb',
                'green': '#16a34a',
                'yellow': '#eab308',
                'purple': '#9333ea',
                'pink': '#ec4899',
                'orange': '#ea580c',
                'gray': '#6b7280',
                'brown': '#92400e',
                'navy': '#1e3a8a',
                'teal': '#0d9488',
                'silver': '#94a3b8',
                'gold': '#b45309',
                'beige': '#d4c19e',
                'cream': '#fef3c7',
                'tan': '#d2b48c',
                'coral': '#f87171',
                'maroon': '#7f1d1d',
                'mint': '#a7f3d0',
                'olive': '#84cc16',
                'wine': '#7f1d1d',
                'khaki': '#d4cb92'
            };
            const defaultColor = 'var(--text-secondary)';
            const color = colorName.toLowerCase();

            if (colorMap[color]) return colorMap[color];

            for (const [key, value] of Object.entries(colorMap)) {
                if (color.includes(key)) return value;
            }

            return defaultColor;
        }
    </script>
    <style>
        :root {
            --primary-color: #2563eb;
            --primary-hover: #1d4ed8;
            --primary-light: #dbeafe;
            --text-primary: #1e293b;
            --text-secondary: #64748b;
            --text-tertiary: #94a3b8;
            --border-color: #e2e8f0;
            --card-bg: #ffffff;
            --hover-bg: #f8fafc;
            --success: #10b981;
            --warning: #f59e0b;
            --danger: #ef4444;
            --radius-sm: 6px;
            --radius-md: 8px;
            --radius-lg: 12px;
            --shadow-sm: 0 1px 3px rgba(0,0,0,0.05), 0 1px 2px rgba(0,0,0,0.1);
            --shadow-md: 0 4px 6px -1px rgba(0,0,0,0.07), 0 2px 4px -1px rgba(0,0,0,0.05);
            --shadow-lg: 0 10px 15px -3px rgba(0,0,0,0.08), 0 4px 6px -2px rgba(0,0,0,0.05);
            --transition: all 0.2s ease;
        }

        /* Sticker Card Design */
        .sticker-card {
            margin-bottom: 1.25rem;
        }

        .sticker-item-wrapper {
            position: relative;
            transition: var(--transition);
        }

        .sticker-primary-card {
            background-color: var(--card-bg);
            border-radius: var(--radius-lg);
            box-shadow: var(--shadow-md);
            overflow: hidden;
            transition: var(--transition);
        }

        .sticker-item-wrapper:hover .sticker-primary-card {
            box-shadow: var(--shadow-lg);
            transform: translateY(-2px);
        }

        /* Accordion Styling */
        .accordion-item {
            border: none;
        }

        .accordion-button {
            padding: 0;
            background: transparent;
            box-shadow: none !important;
            border-radius: var(--radius-lg) !important;
        }

        .accordion-button:not(.collapsed) {
            color: var(--text-primary);
            background-color: var(--card-bg);
        }

        .accordion-button:focus {
            border-color: transparent;
            outline: 0;
            box-shadow: none;
        }

        .accordion-button::after {
            display: none;
        }

        .accordion-body {
            padding: 0;
            background-color: var(--card-bg);
            border-top: 1px solid var(--border-color);
        }

        /* Sticker Content Layout */
        .sticker-content {
            display: flex;
            align-items: center;
            width: 100%;
            padding: 1.25rem;
            position: relative;
        }

        /* Image Container */
        .sticker-thumbnail {
            flex-shrink: 0;
            margin-right: 1.25rem;
        }

        .image-wrapper {
            width: 80px;
            height: 80px;
            border-radius: var(--radius-md);
            overflow: hidden;
            position: relative;
            box-shadow: var(--shadow-sm);
        }

        .image-wrapper img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

        .sticker-item-wrapper:hover .image-wrapper img {
            transform: scale(1.08);
        }

        /* Sticker Information */
        .sticker-info {
            flex: 1;
            min-width: 0;
        }

        .sticker-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 0.5rem;
        }

        .sticker-identifier {
            color: var(--primary-color);
            font-weight: 600;
            font-size: 1.125rem;
            margin: 0;
            line-height: 1.5;
            position: relative;
            display: inline-block;
        }

        .sticker-identifier::after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 0;
            width: 0;
            height: 2px;
            background-color: var(--primary-color);
            transition: width 0.3s ease;
        }

        .sticker-item-wrapper:hover .sticker-identifier::after {
            width: 100%;
        }

        .sticker-name {
            color: var(--text-secondary);
            font-size: 0.95rem;
            font-weight: 400;
            margin: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            transition: var(--transition);
            max-width: calc(100% - 30px);
        }

        .sticker-item-wrapper:hover .sticker-name {
            color: var(--text-primary);
        }

        /* Category Styling */
        .sticker-category {
            display: inline-flex;
            align-items: center;
            padding: 0.35rem 0.75rem;
            background-color: rgba(37, 99, 235, 0.08);
            color: var(--primary-color);
            border-radius: 30px;
            font-size: 0.75rem;
            font-weight: 500;
            white-space: nowrap;
            transition: var(--transition);
        }

        .sticker-category i {
            font-size: 0.7rem;
            margin-right: 0.35rem;
        }

        .sticker-item-wrapper:hover .sticker-category {
            background-color: rgba(37, 99, 235, 0.12);
        }

        .desktop-only {
            display: none;
        }

        .mobile-only {
            display: inline-flex;
            margin-top: 0.5rem;
        }

        @media (min-width: 768px) {
            .desktop-only {
                display: inline-flex;
            }

            .mobile-only {
                display: none;
            }
        }

        /* Chevron Icon */
        .chevron-icon {
            flex-shrink: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 32px;
            height: 32px;
            margin-left: 1rem;
            border-radius: 50%;
            background-color: rgba(100, 116, 139, 0.1);
            color: var(--text-tertiary);
            transition: var(--transition);
        }

        .sticker-item-wrapper:hover .chevron-icon {
            background-color: rgba(100, 116, 139, 0.15);
            color: var(--text-secondary);
        }

        .accordion-button:not(.collapsed) .chevron-icon {
            background-color: var(--primary-color);
            color: white;
        }

        .accordion-button:not(.collapsed) .chevron-icon svg {
            transform: rotate(180deg);
        }

        .chevron-icon svg {
            width: 20px;
            height: 20px;
            transition: transform 0.3s ease;
        }

        /* Details Container */
        .details-container {
            padding: 1.5rem;
        }

        /* Loading State */
        .loading-state {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 2rem 0;
            color: var(--primary-color);
            gap: 1rem;
        }

        .loading-spinner {
            width: 30px;
            height: 30px;
            border: 3px solid var(--primary-light);
            border-top-color: var(--primary-color);
            border-radius: 50%;
            animation: spinner 0.8s linear infinite;
        }

        @keyframes spinner {
            to { transform: rotate(360deg); }
        }

        /* Responsive Adjustments */
        @media (max-width: 576px) {
            .image-wrapper {
                width: 60px;
                height: 60px;
            }

            .sticker-content {
                padding: 1rem;
            }

            .sticker-thumbnail {
                margin-right: 1rem;
            }

            .chevron-icon {
                width: 28px;
                height: 28px;
            }

            .chevron-icon svg {
                width: 18px;
                height: 18px;
            }

            .sticker-identifier {
                font-size: 1rem;
            }

            .sticker-name {
                font-size: 0.875rem;
            }
        }

        /* Product Details Styling */
        .card {
            border: none;
            border-radius: var(--radius-md);
            box-shadow: var(--shadow-sm);
            transition: var(--transition);
        }

        .card:hover {
            box-shadow: var(--shadow-md);
        }

        .card-title {
            color: var(--text-primary);
            font-weight: 600;
        }

        .card-text {
            color: var(--text-secondary);
        }

        .btn-outline-primary {
            border-color: var(--primary-color);
            color: var(--primary-color);
        }

        .btn-outline-primary:hover {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .btn-outline-secondary {
            border-color: var(--text-tertiary);
            color: var(--text-tertiary);
        }

        .btn-outline-secondary:hover {
            background-color: var(--text-tertiary);
            border-color: var(--text-tertiary);
        }

        /* List Group Styling */
        .list-group-item {
            border-color: var(--border-color);
            transition: var(--transition);
        }

        .list-group-item:hover {
            background-color: var(--hover-bg);
        }

        .list-group-item-action:focus, .list-group-item-action:hover {
            background-color: var(--hover-bg);
        }

        /* Badge Styling */
        .badge {
            font-weight: 500;
            padding: 0.35em 0.65em;
        }

        .badge.bg-primary {
            background-color: var(--primary-color) !important;
        }

        .badge.bg-warning {
            background-color: var(--warning) !important;
        }

        /* Nav Tabs */
        .nav-tabs {
            border-bottom-color: var(--border-color);
        }

        .nav-tabs .nav-link {
            color: var(--text-tertiary);
            border: none;
            padding: 0.5rem 1rem;
            transition: var(--transition);
        }

        .nav-tabs .nav-link:hover {
            color: var(--text-secondary);
            border-color: transparent;
        }

        .nav-tabs .nav-link.active {
            color: var(--primary-color);
            background-color: transparent;
            border-bottom: 2px solid var(--primary-color);
        }
        .product-card {
            border: none;
            border-radius: var(--radius-md);
            box-shadow: var(--shadow-sm);
            overflow: hidden;
            transition: var(--transition);
            background-color: var(--card-bg);
            margin-bottom: 1.5rem;
        }

        .product-card:hover {
            box-shadow: var(--shadow-md);
            transform: translateY(-1px);
        }

        .card-header {
            background-color: rgba(241, 245, 249, 0.5);
            border-bottom: 1px solid var(--border-color);
            padding: 1rem 1.25rem;
        }

        .card-content {
            padding: 1.25rem;
        }

        .product-title {
            font-weight: 600;
            color: var(--text-primary);
            font-size: 1.1rem;
            display: flex;
            flex-wrap: wrap;
            align-items: center;
            gap: 0.5rem;
        }

        .product-id {
            color: var(--primary-color);
            font-weight: 700;
        }

        .product-badges {
            display: flex;
            gap: 0.5rem;
        }

        .size-badge, .color-badge {
            font-size: 0.75rem;
            padding: 0.25rem 0.5rem;
            border-radius: 20px;
            font-weight: 500;
        }

        .size-badge {
            background-color: rgba(37, 99, 235, 0.1);
            color: var(--primary-color);
        }

        .color-badge {
            color: #fff;
            text-shadow: 0 0 1px rgba(0,0,0,0.5);
        }

        .product-metadata {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 0.75rem;
        }

        .metadata-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--text-secondary);
            font-size: 0.9rem;
        }

        .metadata-item i {
            color: var(--text-tertiary);
        }

        .product-actions {
            display: flex;
            gap: 0.75rem;
        }

        .action-btn {
            display: inline-flex;
            align-items: center;
            gap: 0.35rem;
            padding: 0.4rem 0.8rem;
            border-radius: var(--radius-sm);
            font-size: 0.85rem;
            font-weight: 500;
            text-decoration: none;
            transition: var(--transition);
            border: 1px solid transparent;
        }

        .eu-link {
            background-color: rgba(37, 99, 235, 0.08);
            color: var(--primary-color);
            border-color: rgba(37, 99, 235, 0.2);
        }

        .eu-link:hover {
            background-color: var(--primary-color);
            color: white;
        }

        .iwasku-link {
            background-color: rgba(100, 116, 139, 0.08);
            color: var(--text-secondary);
            border-color: rgba(100, 116, 139, 0.2);
        }

        .iwasku-link:hover {
            background-color: var(--text-secondary);
            color: white;
        }

        @media (max-width: 576px) {
            .product-metadata {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }

            .product-actions {
                width: 100%;
            }

            .action-btn {
                flex: 1;
                justify-content: center;
            }
        }
        /* ASIN Accordion Styling */
        .asin-accordion-item {
            border-radius: var(--radius-md);
            margin-bottom: 0.75rem;
            border: 1px solid var(--border-color);
            overflow: hidden;
            background-color: var(--card-bg);
            transition: var(--transition);
        }

        .asin-accordion-item:last-child {
            margin-bottom: 0;
        }

        .asin-accordion-item:hover {
            border-color: rgba(37, 99, 235, 0.2);
        }

        .asin-accordion-button {
            padding: 0.75rem 1rem;
            background-color: var(--card-bg);
            position: relative;
            transition: var(--transition);
        }

        .asin-accordion-button:focus {
            box-shadow: none;
            z-index: 1;
        }

        .asin-accordion-button:not(.collapsed) {
            color: var(--primary-color);
            background-color: rgba(37, 99, 235, 0.05);
            box-shadow: none;
        }

        .asin-header {
            display: flex;
            width: 100%;
            justify-content: space-between;
            align-items: center;
        }

        .asin-identifier {
            display: flex;
            align-items: center;
            font-size: 0.95rem;
            color: var(--text-secondary);
        }

        .asin-code {
            font-weight: 600;
            color: var(--text-primary);
            margin-left: 0.4rem;
        }

        .asin-chevron {
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--text-tertiary);
            transition: transform 0.3s ease;
        }

        .accordion-button:not(.collapsed) .asin-chevron {
            transform: rotate(180deg);
            color: var(--primary-color);
        }

        .asin-content {
            padding: 0.75rem 1rem;
            background-color: rgba(241, 245, 249, 0.3);
        }

        /* FNSKU Tabs Styling */
        .fnsku-tabs {
            border-bottom: 1px solid rgba(226, 232, 240, 0.7);
            position: relative;
        }

        .fnsku-tabs .nav-item {
            margin-right: 0.25rem;
            position: relative;
        }

        .fnsku-tabs .nav-link {
            font-size: 0.875rem;
            padding: 0.5rem 0.875rem;
            color: var(--text-secondary);
            border: none;
            border-radius: var(--radius-sm) var(--radius-sm) 0 0;
            transition: var(--transition);
            position: relative;
            background-color: transparent;
        }

        .fnsku-tabs .nav-link:hover {
            color: var(--primary-hover);
            background-color: rgba(241, 245, 249, 0.8);
        }

        .fnsku-tabs .nav-link.active {
            color: var(--primary-color);
            font-weight: 500;
            background-color: transparent;
        }

        .fnsku-tabs .nav-link.active::after {
            content: '';
            position: absolute;
            bottom: -1px;
            left: 0;
            width: 100%;
            height: 2px;
            background-color: var(--primary-color);
            border-radius: var(--radius-sm) var(--radius-sm) 0 0;
        }

        /* Tab Content */
        .tab-content > .tab-pane {
            padding-top: 1rem;
        }

        /* FNSKU List Group */
        .list-group {
            box-shadow: var(--shadow-sm);
            border-radius: var(--radius-md);
            overflow: hidden;
        }

        .list-group-item {
            padding: 0.75rem 1rem;
            color: var(--text-secondary);
            background-color: var(--card-bg);
            border-color: var(--border-color);
            transition: var(--transition);
        }

        .list-group-item:first-child {
            border-top-left-radius: var(--radius-md);
            border-top-right-radius: var(--radius-md);
        }

        .list-group-item:last-child {
            border-bottom-left-radius: var(--radius-md);
            border-bottom-right-radius: var(--radius-md);
        }

        .list-group-item-action {
            color: var(--text-secondary);
        }

        .list-group-item-action:hover {
            color: var(--text-primary);
            background-color: var(--hover-bg);
            transform: translateY(-1px);
        }

        .list-group-item .badge {
            transition: var(--transition);
        }

        .list-group-item-action:hover .badge.bg-primary {
            background-color: var(--primary-hover) !important;
        }

        .list-group-item-action:hover .badge.bg-warning {
            background-color: #f59e0b !important;
        }

        /* Responsive adjustments */
        @media (max-width: 576px) {
            .asin-identifier {
                font-size: 0.875rem;
            }

            .asin-accordion-button {
                padding: 0.625rem 0.875rem;
            }

            .asin-content {
                padding: 0.625rem 0.875rem;
            }

            .fnsku-tabs .nav-link {
                padding: 0.375rem 0.625rem;
                font-size: 0.8125rem;
            }
        }
    </style>

{% endblock %}

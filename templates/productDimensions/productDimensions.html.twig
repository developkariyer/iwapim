{% extends 'base.html.twig' %}
{% block title %} Missing Product Dimensions {% endblock %}
{% block navbaritems %}{% endblock %}
{% block header %}{% endblock %}

{% block content %}
        <div class="container mt-4">
            <h2 class="text-center mb-4">ðŸ“¦ Eksik ÃœrÃ¼n BoyutlarÄ±</h2>
            <div class="toast-container position-fixed top-0 end-0 p-3">
                <div id="notification" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header">
                        <strong class="me-auto" id="toastTitle">Bildirim</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                    <div class="toast-body" id="toastMessage">
                    </div>
                </div>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered align-middle" id="productTable">
                </table>
            </div>
        </div>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        input[type="number"] {
            max-width: 80px;
        }
    </style>
{% endblock %}

{% block body_scripts %}
    <script>
        const pageSize = 50;
        let currentPage = 1;
        let totalItems = 0;

        function showNotification(message, isSuccess = true) {
            const toast = document.getElementById('notification');
            const toastTitle = document.getElementById('toastTitle');
            const toastMessage = document.getElementById('toastMessage');
            toastTitle.textContent = isSuccess ? 'BaÅŸarÄ±lÄ±' : 'Hata';
            toastMessage.textContent = message;
            toast.classList.remove('bg-success', 'bg-danger', 'text-white');
            if (isSuccess) {
                toast.classList.add('bg-success', 'text-white');
            } else {
                toast.classList.add('bg-danger', 'text-white');
            }
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();
        }
        if (data.success) {
            showNotification('ÃœrÃ¼n boyutlarÄ± baÅŸarÄ±yla kaydedildi');
        } else {
            showNotification('Kaydederken hata oluÅŸtu: ' + (data.message || 'Bilinmeyen hata'), false);
        }

        function fetchData(page = 1) {
            currentPage = page;
            const loadingRow = '<tr><td colspan="9" class="text-center">YÃ¼kleniyor...</td></tr>';
            document.getElementById('productTableBody').innerHTML = loadingRow;
            fetch(`/product-dimensions-data?page=${page}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Veri yÃ¼klenirken hata oluÅŸtu: ' + response.status);
                    }
                    return response.json();
                })
                .then(data => {
                    totalItems = data.total;
                    const tbody = document.getElementById('productTableBody');
                    tbody.innerHTML = '';

                    if (data.products.length === 0) {
                        tbody.innerHTML = '<tr><td colspan="9" class="text-center">ÃœrÃ¼n bulunamadÄ±</td></tr>';
                        return;
                    }

                    data.products.forEach(product => {
                        const row = document.createElement('tr');
                        row.dataset.productId = product.id;
                        row.innerHTML = `
                            <td>${product.name || '-'}</td>
                            <td>${product.iwasku || '-'}</td>
                            <td>${product.category || '-'}</td>
                            <td>
                                <input type="number" step="0.01" value="${product.weight !== null ? product.weight : ''}"
                                    class="form-control weight-input">
                            </td>
                            <td>
                                <input type="number" step="0.1" value="${product.width !== null ? product.width : ''}"
                                    class="form-control width-input">
                            </td>
                            <td>
                                <input type="number" step="0.1" value="${product.length !== null ? product.length : ''}"
                                    class="form-control length-input">
                            </td>
                            <td>
                                <input type="number" step="0.1" value="${product.height !== null ? product.height : ''}"
                                    class="form-control height-input">
                            </td>
                            <td>${product.desi !== null ? product.desi.toFixed(2) : '-'}</td>
                            <td>
                                <button class="btn btn-primary btn-sm save-btn">Kaydet</button>
                                <div class="spinner-border spinner-border-sm d-none" role="status">
                                    <span class="visually-hidden">YÃ¼kleniyor...</span>
                                </div>
                            </td>
                        `;
                        tbody.appendChild(row);
                        const saveBtn = row.querySelector('.save-btn');
                        saveBtn.addEventListener('click', () => saveProductDimensions(row));
                    });

                    renderPagination();
                })
                .catch(error => {
                    console.error('Hata:', error);
                    document.getElementById('productTableBody').innerHTML =
                        `<tr><td colspan="9" class="text-center text-danger">Hata oluÅŸtu: ${error.message}</td></tr>`;
                });
        }
        function renderPagination() {
            const totalPages = Math.ceil(totalItems / pageSize);
            const pagination = document.getElementById('pagination');
            pagination.innerHTML = '';
            if (currentPage > 1) {
                const prevLi = document.createElement('li');
                prevLi.className = 'page-item';
                prevLi.innerHTML = '<a class="page-link" href="#">&laquo;</a>';
                prevLi.addEventListener('click', e => {
                    e.preventDefault();
                    fetchData(currentPage - 1);
                });
                pagination.appendChild(prevLi);
            }
            let startPage = Math.max(1, currentPage - 2);
            let endPage = Math.min(totalPages, startPage + 4);
            if (endPage - startPage < 4) {
                startPage = Math.max(1, endPage - 4);
            }
            for (let i = startPage; i <= endPage; i++) {
                const li = document.createElement('li');
                li.className = 'page-item' + (i === currentPage ? ' active' : '');
                li.innerHTML = `<a class="page-link" href="#">${i}</a>`;
                li.addEventListener('click', e => {
                    e.preventDefault();
                    fetchData(i);
                });
                pagination.appendChild(li);
            }
            if (currentPage < totalPages) {
                const nextLi = document.createElement('li');
                nextLi.className = 'page-item';
                nextLi.innerHTML = '<a class="page-link" href="#">&raquo;</a>';
                nextLi.addEventListener('click', e => {
                    e.preventDefault();
                    fetchData(currentPage + 1);
                });
                pagination.appendChild(nextLi);
            }
        }
        document.addEventListener('DOMContentLoaded', () => fetchData());
    </script>
{% endblock %}